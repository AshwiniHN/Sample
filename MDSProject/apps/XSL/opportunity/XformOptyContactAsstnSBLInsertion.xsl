<?xml version="1.0" encoding="UTF-8"?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. --> <mapSources> <source type="WSDL"> <schema location="../OptyAssociationSiebelProvABCSImpl.wsdl"/> <rootElement name="EventsToProcess" namespace="http://www.siebel.com/xml/OptyEventsToProcessFromBroker"/> </source> <source type="WSDL"> <schema location="../OptyAssociationSiebelProvABCSImpl.wsdl"/> <rootElement name="MultiIds" namespace="http://SalesforceIntegration/Opty_SFIds"/> <param name="VarIds" /> </source> </mapSources> <mapTargets> <target type="WSDL"> <schema location="http://sfintegration-dev.corpzone.internalzone.com:80/soa-infra/services/default/OptyWSEndPointSiebelProcess/ISG_SF_Opportunity_WS.wsdl"/> <rootElement name="ListOfIsg_Sf_Opportunity_Io" namespace="http://www.siebel.com/xml/ISG_SF_Opportunity_IO/Data"/> </target> </mapTargets> <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.7.8(build 150622.2350.0222) AT [TUE DEC 22 14:46:40 CST 2015]. --> ?>
<xsl:stylesheet exclude-result-prefixes="xsi xsl ns2 ns1 wsdl plnk client xsd ns10 xsdLocal1 xsdLocal2 tns1 soapenc soap tns xsdLocal3 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                xmlns:ens="urn:sobject.enterprise.soap.sforce.com"
                xmlns:ns100="urn:enterprise.soap.sforce.com"
                xmlns:ns10="http://www.siebel.com/xml/OptyEventsToProcessFromBroker"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:client="http://xmlns.oracle.com/SFProject/OpportunityFromSFtoSiebel/OptyAssociationSiebelProvABCSImpl"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:xsdLocal3="http://www.siebel.com/xml/ISG_SF_Opportunity_IO/Query"
                xmlns:tns="http://siebel.com/CustomUI"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns1="urn:enterprise.soap.sforce.com"
                xmlns:ns2="http://SalesforceIntegration/Opty_SFIds"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
                xmlns:tns1="http://siebel.com/webservices"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:xsdLocal2="http://www.siebel.com/xml/ISG_SF_Opportunity_IO/Id"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsdLocal1="http://www.siebel.com/xml/ISG_SF_Opportunity_IO/Data"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                version="1.0">
  <!--xsdLocal1:MFEDealRegProductsStr> <xsl:value-of select="ens:Approved_Product_Types__c"/> </xsdLocal1:MFEDealRegProductsStr-->
  <!--xsl:if test="ens:Partner_Expiration_Date__c"> <xsdLocal1:MFEDealRegProductsStr> <xsl:value-of select="ens:NoValueinSF"/> </xsdLocal1:MFEDealRegProductsStr> </xsl:if-->
  <xsl:param name="VarIds"/>
  <xsl:template match="/">
    <xsdLocal1:ListOfIsg_Sf_Opportunity_Io>
      <xsl:apply-templates select="/ns10:EventsToProcess/ns10:ListOfEvent/ns10:Event[ns10:Operation !='Delete']"/>
    </xsdLocal1:ListOfIsg_Sf_Opportunity_Io>
  </xsl:template>
  <xsl:template match="/ns10:EventsToProcess/ns10:ListOfEvent/ns10:Event[ns10:Operation !='Delete']">
    <xsl:variable name="PartnerID" select="ns10:Document/ns100:result/ens:Id"/>
    <xsl:variable name="ContactId"
                  select="ns10:Document/ns100:result/ens:ContactId"/>
    <xsl:variable name="Opportunity_Id"
                  select="ns10:Document/ns100:result/ens:OpportunityId"/>
    <xsl:choose>
      <xsl:when test="(string-length($VarIds/ns2:MultiIds/ns2:ids[ns2:SFPartnerID=$PartnerID]/ns2:SBLPartnerID) = 0.0 and string-length($VarIds/ns2:MultiIds/ns2:ids[ns2:SFContactId=$ContactId]/ns2:SiebelContactId) != 0.0 and string-length($VarIds/ns2:MultiIds/ns2:ids[ns2:SFOptyId=$Opportunity_Id]/ns2:SiebelOptyId) != 0.0) ">
        <xsdLocal1:Opportunity>
          <xsdLocal1:Id>
            <xsl:value-of select="$VarIds/ns2:MultiIds/ns2:ids[ns2:SFOptyId=$Opportunity_Id]/ns2:SiebelOptyId"/>
          </xsdLocal1:Id>
    
           <xsdLocal1:ListOfContact>
            <xsdLocal1:Contact>
            
              <xsl:if test="$VarIds/ns2:MultiIds/ns2:ids[ns2:SFContactId=$ContactId]/ns2:SiebelContactId">
                <xsdLocal1:Id>
                  <xsl:value-of select="$VarIds/ns2:MultiIds/ns2:ids[ns2:SFContactId=$ContactId]/ns2:SiebelContactId"/>
                </xsdLocal1:Id>
              </xsl:if>
        
              
              
              
            </xsdLocal1:Contact>
          </xsdLocal1:ListOfContact>
          
          
      
        </xsdLocal1:Opportunity>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="ConvertSFDateToSiebelDate">
    <xsl:param name="Date"/>
    <xsl:if test="string-length($Date) != 0">
      <xsl:variable name="Year" select="substring-before ($Date, '-')"/>
      <xsl:variable name="MonthTmp" select="substring-after($Date, '-')"/>
      <xsl:variable name="Month" select="substring-before ($MonthTmp, '-')"/>
      <xsl:variable name="Day" select="substring-after ($MonthTmp,'-')"/>
      <xsl:variable name="ModifiedDate"
                    select="concat ($Month , '/', $Day ,'/',$Year)"/>
      <xsl:value-of select="$ModifiedDate"/>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
