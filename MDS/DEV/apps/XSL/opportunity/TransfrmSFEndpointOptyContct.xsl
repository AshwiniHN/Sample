<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../OpportunityContactAssociationProvider.wsdl"/>
      <rootElement name="OptyContactAssociationRequest" namespace="http://www.intel.org/OpportunityContactAssociationProv/v1.0"/>
    </source>
    <source type="WSDL">
      <schema location="oramds:/apps/SOA-INFRA/WSDL/XREFMultiLookUp.wsdl"/>
      <rootElement name="xrefinput" namespace="http://xmlns.oracle.com/XREFInterface"/>
      <param name="InvokeMultiLookUpOutputVar.XREFOutput" />
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="oramds:/apps/WSDL/generateEnterprise.wsdl"/>
      <rootElement name="create" namespace="urn:enterprise.soap.sforce.com"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.7.8(build 150622.2350.0222) AT [MON JAN 11 11:05:43 CST 2016]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                xmlns:tns="urn:enterprise.soap.sforce.com"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:ns0="http://www.siebel.com/xml/ISG_SF_Opportunity_IO"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:client="http://xmlns.oracle.com/Application1/OpportunityContactAssociationProvider/OpportunityContactAssociationProvider"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ns2="http://www.siebel.com/xml/ISGSFContactIO"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns5="http://xmlns.oracle.com/LatestCode/XREFInterface/XREFMultiLookUp"
                xmlns:fns="urn:fault.enterprise.soap.sforce.com"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns4="http://schemas.oracle.com/bpel/extension"
                xmlns:ns3="http://xmlns.oracle.com/XREFInterface"
                xmlns:ns1="http://www.intel.org/OpportunityContactAssociationProv/v1.0"
                xmlns:ens="urn:sobject.enterprise.soap.sforce.com"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl plnk wsdl ns0 client ns2 ns5 xsd ns4 ns3 ns1 soap tns fns ens xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap">
     <xsl:param name="InvokeMultiLookUpOutputVar.XREFOutput"/>
     <xsl:template match="/">
          <tns:create>
               <xsl:choose>
                    <xsl:when test="/ns1:OptyContactAssociationRequest/ns1:CallerType='Contact'">
                         <xsl:for-each select="/ns1:OptyContactAssociationRequest/ns1:Contact/ns2:ListOfIsgsfcontactio/ns2:Contact/ns2:ListOfOpportunity/ns2:Opportunity">
                              <xsl:variable name="Opty" select="ns2:Id"/>
                              <xsl:variable name="Cont"
                                            select="/ns1:OptyContactAssociationRequest/ns1:Contact/ns2:ListOfIsgsfcontactio/ns2:Contact/ns2:Id"/>
                              <xsl:variable name="OptyCont"
                                            select="concat($Opty,'++',$Cont)"/>
                              <xsl:if test="string-length($InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$Cont]/ns3:hostRowId)>0 and string-length($InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$Opty]/ns3:hostRowId)>0">
                                   <tns:sObjects>
                                        <xsl:attribute name="xsi:type">
                                             <xsl:text disable-output-escaping="no">OpportunityContactRole</xsl:text>
                                        </xsl:attribute>
                                        <xsl:choose>
                                             <xsl:when test="$InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$OptyCont]/ns3:hostRowId != ''">
                                                  <tns:Id>
                                                       <xsl:value-of select="$InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$OptyCont]/ns3:hostRowId"/>
                                                  </tns:Id>
                                             </xsl:when>
                                             <xsl:otherwise>
                                                  <tns:Id/>
                                             </xsl:otherwise>
                                        </xsl:choose>
                                        <tns:ContactId>
                                             <xsl:value-of select="$InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$Cont]/ns3:hostRowId"/>
                                        </tns:ContactId>
                                        <tns:OpportunityId>
                                             <xsl:value-of select="$InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$Opty]/ns3:hostRowId"/>
                                        </tns:OpportunityId>
                                        <tns:Role>End User-Decision Maker</tns:Role>
                                   </tns:sObjects>
                              </xsl:if>
                         </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="/ns1:OptyContactAssociationRequest/ns1:CallerType='Opportunity'">
                        <xsl:for-each select="/ns1:OptyContactAssociationRequest/ns1:Opportunity/ns0:ListOfIsg_Sf_Opportunity_Io/ns0:Opportunity/ns0:ListOfOpportunity_ContactRole/ns0:Opportunity_ContactRole">
                              <xsl:variable name="Opty"
                                            select="/ns1:OptyContactAssociationRequest/ns1:Opportunity/ns0:ListOfIsg_Sf_Opportunity_Io/ns0:Opportunity/ns0:Id"/>
                              <xsl:variable name="Cont" select="ns0:Id"/>
                              <xsl:variable name="OptyCont"
                                            select="concat($Opty,'++',$Cont)"/>
                              <xsl:if test="string-length($InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$Opty]/ns3:hostRowId)>0 and string-length($InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$Cont]/ns3:hostRowId)>0">
                                   <tns:sObjects>
                                        <xsl:attribute name="xsi:type">
                                             <xsl:text disable-output-escaping="no">OpportunityContactRole</xsl:text>
                                        </xsl:attribute>
                                        <xsl:choose>
                                             <xsl:when test="$InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$OptyCont]/ns3:hostRowId != ''">
                                                  <tns:Id>
                                                       <xsl:value-of select="$InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$OptyCont]/ns3:hostRowId"/>
                                                  </tns:Id>
                                             </xsl:when>
                                             <xsl:otherwise>
                                                  <tns:Id/>
                                             </xsl:otherwise>
                                        </xsl:choose>
                                        <tns:ContactId>
                                             <xsl:value-of select="$InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$Cont]/ns3:hostRowId"/>
                                        </tns:ContactId>
                                        <tns:OpportunityId>
                                             <xsl:value-of select="$InvokeMultiLookUpOutputVar.XREFOutput/ns3:xrefinput/ns3:operation[ns3:refHostRowId=$Opty]/ns3:hostRowId"/>
                                        </tns:OpportunityId>
                                        <tns:Role>End User-Decision Maker</tns:Role>
                                   </tns:sObjects>
                              </xsl:if>
                         </xsl:for-each>
                    </xsl:when>
               </xsl:choose>
          </tns:create>
     </xsl:template>
</xsl:stylesheet>




