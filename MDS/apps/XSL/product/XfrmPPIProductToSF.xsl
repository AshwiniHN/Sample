<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../UpsertProductSFProvABCSImpl.wsdl"/>
      <rootElement name="ProductStruture" namespace="http://SalesforceProject/ProductDBXML"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="http://sfintegration-dev.corpzone.internalzone.com:80/soa-infra/services/default/SFEndpointProcess/apps/WSDL/generateEnterprise.wsdl"/>
      <rootElement name="create" namespace="urn:enterprise.soap.sforce.com"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.7.8(build 150622.2350.0222) AT [THU AUG 06 14:06:55 MDT 2015]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ns1="http://SalesforceProject/ProductDBXML"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                xmlns:tns="urn:enterprise.soap.sforce.com"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:client="http://SalesforceProject/UpsertProductSFProvABCSImpl"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:fns="urn:fault.enterprise.soap.sforce.com"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns2="http://schemas.oracle.com/bpel/extension"
                xmlns:bpmn="http://schemas.oracle.com/bpm/xpath"
                xmlns:ens="urn:sobject.enterprise.soap.sforce.com"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl ns1 wsdl client plnk xsd ns2 soap tns fns ens xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap">
  <xsl:template match="/">
    <tns:create>
      <xsl:for-each select="/ns1:ProductStruture/ns1:ProductEvents/ns1:sf_product_netchanges">
        <tns:sObjects xsi:type="urn:Product2">
          <xsl:if test="ns1:eol_dt != ''">
            <ens:EOL_Date__c>
              <xsl:call-template name="ConvertDate">
                <xsl:with-param name="date"
                                select="ns1:eol_dt"/>
              </xsl:call-template>
            </ens:EOL_Date__c>
          </xsl:if>
          <xsl:if test="ns1:eos_dt != ''">
            <ens:EOS_Date__c>
              <xsl:call-template name="ConvertDate">
                <xsl:with-param name="date"
                                select="ns1:eos_dt"/>
              </xsl:call-template>
            </ens:EOS_Date__c>
          </xsl:if>


        <!--  <xsl:if test="../ns1:SFXrefId !=''">
            <ens:Id>
              <xsl:value-of select="../ns1:SFXrefId"/>
            </ens:Id>
          </xsl:if> -->

          <!--xsl:if test="ns1:active_flg">
            <xsl:choose>
              <xsl:when test="ns1:active_flg='Y'">
                <ens:Active_in_Source__c>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </ens:Active_in_Source__c>
              </xsl:when>
              <xsl:otherwise>
                <ens:Active_in_Source__c>
                  <xsl:text disable-output-escaping="no">0</xsl:text>
                </ens:Active_in_Source__c>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
	       <xsl:choose>
              <xsl:when test="ns1:active_flg='Y' and ns1:orderable_flg='Y'">
                <ens:IsActive>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </ens:IsActive>
              </xsl:when>
              <xsl:otherwise>
                <ens:IsActive>
                  <xsl:text disable-output-escaping="no">0</xsl:text>
                </ens:IsActive>
              </xsl:otherwise>
            </xsl:choose-->
			<ens:Active_in_Source__c>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </ens:Active_in_Source__c>
			<ens:IsActive>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </ens:IsActive>
          <xsl:if test="ns1:prod_cd">
            <ens:Material_Category__c>
              <xsl:value-of select="ns1:prod_cd"/>
            </ens:Material_Category__c>
          </xsl:if>
          <xsl:if test="ns1:material_grp">
            <ens:Material_Group__c>
              <xsl:value-of select="ns1:material_grp"/>
            </ens:Material_Group__c>
          </xsl:if>
          <xsl:if test="ns1:material_type">
            <ens:Material_Type__c>
              <xsl:value-of select="ns1:material_type"/>
            </ens:Material_Type__c>
          </xsl:if>
          <xsl:if test="ns1:name">
            <ens:ProductCode>
              <xsl:value-of select="ns1:name"/>
            </ens:ProductCode>
          </xsl:if>

          <xsl:if test="ns1:name">
            <ens:Legacy_id__c>
              <xsl:value-of select="ns1:name"/>
            </ens:Legacy_id__c>
          </xsl:if>

          <xsl:if test="ns1:orderable_flg">
            <xsl:choose>
              <xsl:when test="ns1:orderable_flg='Y'">
                <ens:Orderable__c>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </ens:Orderable__c>
              </xsl:when>
              <xsl:otherwise>
                <ens:Orderable__c>
                  <xsl:text disable-output-escaping="no">0</xsl:text>
                </ens:Orderable__c>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
		   <!--ens:Orderable__c>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </ens:Orderable__c-->
          <xsl:if test="ns1:ph_level1">
            <ens:PH_Level1__c>
              <xsl:value-of select="ns1:ph_level1"/>
            </ens:PH_Level1__c>
          </xsl:if>
          <xsl:if test="ns1:ph_level2">
            <ens:PH_Level2__c>
              <xsl:value-of select="ns1:ph_level2"/>
            </ens:PH_Level2__c>
          </xsl:if>
          <xsl:if test="ns1:ph_level3">
            <ens:PH_Level3__c>
              <xsl:value-of select="ns1:ph_level3"/>
            </ens:PH_Level3__c>
          </xsl:if>
          <xsl:if test="ns1:ph_level4">
            <ens:PH_Level4__c>
              <xsl:value-of select="ns1:ph_level4"/>
            </ens:PH_Level4__c>
          </xsl:if>
          <xsl:if test="ns1:product_type">
            <ens:Family>
              <xsl:value-of select="ns1:product_type"/>
            </ens:Family>
          </xsl:if>
          <xsl:if test="ns1:ph_level5">
            <ens:PH_Level5__c>
              <xsl:value-of select="ns1:ph_level5"/>
            </ens:PH_Level5__c>
          </xsl:if>
          <xsl:if test="ns1:ph_level6">
            <ens:PH_Level6__c>
              <xsl:value-of select="ns1:ph_level6"/>
            </ens:PH_Level6__c>
          </xsl:if>
          <xsl:if test="ns1:ph_level7">
            <ens:PH_Level7__c>
              <xsl:value-of select="ns1:ph_level7"/>
            </ens:PH_Level7__c>
          </xsl:if>
          <xsl:if test="ns1:prod_attrib01_cd">
            <ens:Product_Hierarchy__c>
              <xsl:value-of select="ns1:prod_attrib01_cd"/>
            </ens:Product_Hierarchy__c>
          </xsl:if>
          <xsl:if test="ns1:desc_text">
            <ens:Name>
              <xsl:value-of select="ns1:desc_text"/>
            </ens:Name>
          </xsl:if>
          <xsl:if test="ns1:desc_text">
            <ens:Product_Name__c>
              <xsl:value-of select="ns1:desc_text"/>
            </ens:Product_Name__c>
          </xsl:if>
          <xsl:if test="ns1:sol_competency">
            <ens:Solution_Competency__c>
              <xsl:value-of select="ns1:sol_competency"/>
            </ens:Solution_Competency__c>
          </xsl:if>
          <!-- 
      <xsl:if test="ns1:product_type">
      <ens:Product_Type__c>
        <xsl:value-of select="ns1:product_type"/>
      </ens:Product_Type__c>
      </xsl:if>
      -->
          <xsl:if test="ns1:support_level">
            <ens:Support_Level__c>
              <xsl:value-of select="ns1:support_level"/>
            </ens:Support_Level__c>
          </xsl:if>
        </tns:sObjects>
      </xsl:for-each>
    </tns:create>
  </xsl:template>
  <!--  User Defined Templates  -->
  <xsl:template name="ConvertDate">
    <xsl:param name="date"/>
    <xsl:if test="string-length($date) != 0">

      <xsl:variable name="modifiedDate" select="substring($date,0,11)"/>

      <xsl:value-of select="$modifiedDate"/>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
